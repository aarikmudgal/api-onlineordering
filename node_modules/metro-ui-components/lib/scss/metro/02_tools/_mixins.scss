/**
 * Importing _family
 *
 * Family.scss is a set of Sass mixins which will help you to manage the style of :nth-child"ified elements, in an easy
 * way.
 *
 * @see https://lukyvj.github.io/family.scss/
 */
@import "../../vendor/family/family.scss";

/**
 * _tools.scss partial
 *
 * Contains global mixins and functions.
 *
 * @author christian.nies@uxi.de
 */

/// Mixin to create border-radius to given selector
/// @author christian.nies@uxi.de
/// @since 0.1
/// @param {int} $border-radius [0.1875rem] - Default border-radius of 3px represented in root em size of base font size of 16px
@mixin has-border-radius( $border-radius: get-ui(border-radius-small)) {
  border-radius: $border-radius;
}

/**
// Standard
.radius-small {
	border-radius:2px;
}
.radius-medium {
	border-radius:4px;
}
.radius-large {
	border-radius:16px;
}
 */

/// Mixin to create transition for given selected element.
///
/// @author christian.nies@uxi.de
///
/// @since 0.1
///
/// @example scss - Assign animation [selector]
///   [selector] {
///     @include is-animated;
///   }
@mixin is-animated($property: all) {
  transition: $property 0.125s ease-in-out 0s;
}

/// Mixin to create box shadow for given selected element.
///
/// @author christian.nies@uxi.de
///
/// @since 0.1
///
/// @example scss - Assign box shadow [selector]
///   [selector] {
///     @include has-standard-box-shadow;
///   }
@mixin has-standard-box-shadow() {
  box-shadow: 0 1px 2px 0 transparentize(grey, 0.8);
}

/// Mixin to create box shadow for given selected element in hover state.
///
/// @author christian.nies@uxi.de
///
/// @since 0.1
///
/// @example scss - Assign box shadow [selector]
///   [selector] {
///     @include has-standard-box-shadow-hover;
///   }
@mixin has-standard-box-shadow-hover() {
  box-shadow: 0 2px 4px 0 transparentize(grey, 0.8);

  @include is-animated;
}

/// Mixin to create box shadow for given selected element.
///
/// @author christian.nies@uxi.de
///
/// @since 0.1
///
/// @example scss - Assign box shadow [selector]
///   [selector] {
///     @include has-modal-box-shadow;
///   }
@mixin has-modal-box-shadow() {
  box-shadow: 0 8px 32px 0 transparentize(grey, 0.8);
}

/// Mixin to create box shadow for given selected element.
///
/// @author christian.nies@uxi.de
///
/// @since 0.1
///
/// @example scss - Assign box shadow [selector]
///   [selector] {
///     @include has-standard-inner-shadow;
///   }
@mixin has-standard-inner-shadow() {
  box-shadow: inset 0 1px 3px 0 rgba(0, 0, 0, 0.24);
}

/// Mixin to create box shadow for given selected element.
///
/// @author christian.nies@uxi.de
///
/// @since 0.1
///
/// @example scss - Assign box shadow [selector]
///   [selector] {
///     @include has-inner-shadow;
///   }
@mixin has-inner-shadow() {
  box-shadow: inset 0 1px 3px 0 rgba(51, 51, 51, 0.15);
}

// No Hover for children of html.touchevents
@mixin hover() {
  html:not(.touchevents) &:hover {
    @content;
  }
}

// No focus for children of html.touchevents
@mixin focus() {
  html:not(.touchevents) &:focus {
    @content;
  }
}

/// Mixin to normalize default button styles
///
/// @author julian.kempff@uxi.de
///
/// @since 2.1.19
///
/// @example scss - Reset button styles [selector]
///   [selector] {
///     @include button-reset;
///   }
@mixin button-reset() {
  display: inline-block;
  padding: 0;
  margin: 0;

  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  border: 0 none;
  background: transparent;

  appearance: none;
  cursor: pointer;
}


// New BoxShadows

/// Mixin to create box shadow for given selected element.
///
/// @author christian.nies@uxi.de
///
/// @since 1.1.8
///
/// @example scss - Assign box shadow [selector]
///   [selector] {
///     @include has-box-shadow-1;
///   }
@mixin has-box-shadow-1() {
  box-shadow: 0 1px 2px 0 transparentize(color(metro-blue), 0.8);
}

@mixin has-box-shadow-1-hover() {
  box-shadow: 0 3px 6px 0 transparentize(color(metro-blue), 0.8);
}


/// Mixin to create box shadow for given selected element.
///
/// @author christian.nies@uxi.de
///
/// @since 1.1.8
///
/// @example scss - Assign box shadow [selector]
///   [selector] {
///     @include has-box-shadow-2;
///   }
@mixin has-box-shadow-2() {
  box-shadow: 0 2px 4px 0 transparentize(color(metro-blue), 0.8);
}
@mixin has-box-shadow-2-hover {
  box-shadow: 0 4px 8px 0 transparentize(color(metro-blue), 0.8);
}


/// Mixin to create box shadow for given selected element.
///
/// @author christian.nies@uxi.de
///
/// @since 1.1.8
///
/// @example scss - Assign box shadow [selector]
///   [selector] {
///     @include has-box-shadow-3;
///   }
@mixin has-box-shadow-3() {
  box-shadow: 0 8px 32px 0 transparentize(color(metro-blue), 0.8);
}
@mixin has-box-shadow-3-hover {
  box-shadow: 0 8px 32px 0 transparentize(color(metro-blue), 0.8);
}

/// Mixin to create a background indicator for disabled elements, like buttons e.g.
///
/// @author julian.kempff@uxi.de
///
/// @since 2.1.7
///
/// @example scss - Assign background indicator [selector]
///   [selector] {
///     @include has-no-interaction(color-tint(grey, 90));
///   }
@mixin has-no-interaction($color, $stripe-base: color-tint(grey, 80)) {
  background-color: $color;

  $stripe-color-1: transparentize($stripe-base, 0.5);
  $stripe-color-2: transparentize($stripe-base, 1);

  background-image: repeating-linear-gradient(
    40deg,
    $stripe-color-1 0,
    $stripe-color-1 2px,
    $stripe-color-2 2px,
    $stripe-color-2 10px
  );
}