@mixin BarcodeCard {
  $barcode-types: (
    blue: (#48b0ff , #3399ff , #247bff , #113dff , #4ba5ff),
    gold: (#f5cd47 , #c58700 , #d19f07 , #deb630 , #ba7900),
    red: (#c80000 , #ab0000 , #b90000 , #920000 , #e60000),
    green: (#95ce00 , #c9e600 , #b3dc00 , #d8ed00 , #e3f200),
    tr-bl: (#002470, #153d8c, #224e9d, #001052, #2e5cb0),
    tr-pc: (#fbcc2e, #fcd956, #fce171, #fbc828, #fbbd16),
    nl-bl: (#0097ff , #2cb0ff , #52c0ff , #63c8ff , #008eff),
    nl-si: (#d1d7e4, #dadfea, #eef1f6, #c4cbd9, #dadfea),
    nl-vp: (#152a40, #203850, #2d4965, #0f2032, #203850),
    nl-go: (#fce600 , #fcd300 , #fac700 , #fcec21 , #fbb800),
    nl-pc: (#73bc00 , #93cd23 , #a8d84e , #bae06e , #6bae00),
    de-bl: (#0097ff , #2cb0ff , #52c0ff , #63c8ff , #008eff),
    de-si: (#d1d7e4, #dadfea, #eef1f6, #c4cbd9, #dadfea),
    de-go: (#fce600 , #fcd300 , #fac700 , #fcec21 , #fbb800),
    de-pc: (#0097ff , #2cb0ff , #52c0ff , #63c8ff , #008eff),
    de-eu: (#fbcc2e, #fcd956, #fce171, #fbc828, #fbbd16)
  );
  $barcode-min-height-breakpoint: 620px;

  .m-barcodeCard {
    display: flex;

    position: absolute;
    top: 0;
    left: 16px;
    right: 16px;
    bottom: 0;

    max-height: 100vh;
    margin-bottom: 2rem;

    flex-grow: 1;
    flex-direction: column;
    justify-content: space-between;

    background-color: white;
    box-shadow: 0 8px 32px 0 color-tint(grey, 80);
    border-radius: 16px;

    overflow: hidden;

    &-section {
      padding: 0 16px;
      flex-grow: 0;

      & + & {
        padding-top: 1px;

        box-shadow: inset 0 1px 0 0 color-tint(grey, 95);
      }

      > p {
        padding-bottom: 0;
        color: color-tint(grey, 20);

        @media (min-height: $barcode-min-height-breakpoint) {
          padding-bottom: 0.5rem;
        }
      }

      > small {
        color: color-tint(grey, 20);
      }

      > a {
        display: flex;
        justify-content: flex-end;
        align-items: center;
      }
    }

    &-hasImage.m-barcodeCard-section {
      display: flex;

      > p {
        margin-right: auto;
        min-width: 0;
      }
    }

    &-icon {
      display: none;

      @media (min-height: $barcode-min-height-breakpoint) {
        display: block;
        margin: 18px auto 0;
      }
    }

    &-code {
      position: relative;
      margin: 18px 16px 0;
      max-height: 180px;
      min-height: 20px;

      overflow: hidden;
      flex-grow: 1;
      flex-shrink: 1;
      text-align: center;

      svg,
      img {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;

        width: 100%;
        height: 100%;
      }

      svg {
        height: 100%;
      }
    }

    &-secure {
      position: relative;
      height: 48px;
      overflow: hidden;
      border-radius: 0 0 16px 16px;
      flex-grow: 0;

      transform: translateZ(0);

      @media (min-height: $barcode-min-height-breakpoint) {
        height: 65px;
      }

      strong {
        position: relative;
        display: block;
        text-align: center;
        padding: 16px 0;

        color: white;
        font-weight: bold;
        z-index: 1;

        @media (min-height: $barcode-min-height-breakpoint) {
          padding: 23px 0;
        }
      }

      @include BarcodeCardSecureGenerator();
    }

    @each $type, $colors in $barcode-types {
      &-#{$type} {

        // TODO What is meant hereâ€¦?

        /* OHOH */
        background-color: nth($colors, 1);

        span {
          background-color: transparentize(nth($colors, 1), 0.2);
        }

        @each $color in $colors {
          content: "#{$color}";
          span:nth-child(#{length($colors)}n + #{index($colors, $color)}) {
            background-color: transparentize($color, 0.5);
          }
        }
      }
    }
  }
}

@mixin BarcodeCardSecureGenerator($count: 7) {

  span {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 20%;

    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
  }

  @for $i from 1 through $count {
    $width: (100% / ($count)) + random(20);

    span:nth-child(#{$i}) {
      left: 100% / $count * ($i - 2);
      width: $width;

      /*filter: hue-rotate(random(10) * -1deg) saturate(115 - random(30) * 1%);*/

      animation-name: barcode-secure-#{$i};
      animation-duration: 3s + $i * 0.5s + random(20) / 10;
    }

    @keyframes barcode-secure-#{$i} {
      0%, 100% {
        transform: translateX($width + random(150)) scaleX((150 - random(100)) / 100);
        // transform: translateX(-50% - $i / (20 / $count) + random($i * 80)) scaleX(0.2);
      }

      50% {
        transform: translateX($width - random(150)) scaleX(1);
      }
    }
  }
}
