/**
 * _functions.scss partial
 *
 * Contains global functions.
 */

/// Helper function to retrieve ui properties from sass-map.
///
/// @author christian.nies@uxi.de
///
/// @param {Length} $key - Element's width
///
/// @example scss - Assign ui properties to given `[selector]`
///   [selector] {
///     @include get-ui( grid-padding );
///   }
@function get-ui($key) {
  @if map-has-key($ui, $key) {
    @return map-get($ui, $key);
  }

  @warn "Unknown `#{$key}` in $ui.";
  @return null;
}

/// Helper function to retrieve transition properties from sass-map.
///
/// @author christian.nies@uxi.de
///
/// @param {Length} $key - Element's width
///
/// @example scss - Assign ui styles `.foo`
///   [selector] {
///     @include get-ui( brand_1 );
///   }
@function get-transition($key) {
  @if map-has-key($transition, $key) {
    @return map-get($transition, $key);
  }

  @warn "Unknown `#{$key}` in $ui.";
  @return null;
}

/// Helper function to retrieve type styles from sass-map.
///
/// @author christian.nies@uxi.de
///
/// @param {Length} $key - Element's width
///
/// @example scss - Assign type styles `.foo`
///   .foo {
///     @include color( brand_1 );
///   }
@function get-type($key) {
  @if map-has-key($type, $key) {
    @return map-get($type, $key);
  }

  @warn "Unknown `#{$key}` in $type.";
  @return null;
}

/// Helper function to convert pixels to rem
///
/// @author ju@formundcode.de
///
/// @param $px - The pixel value to convert
/// @param $context - Optional,
///
/// @example scss - Use function to set width of an element to 1rem
///   .foo {
///     width: px2rem(16px);
///   }
@function px2rem($px, $context: get-ui(base-font-size)) {
  @if (unitless($px)) {
    $px: $px * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $px / $context * 1rem;
}
/// Helper function to calculate relative line-heights
///
/// @author ju@formundcode.de
///
/// @param $px - The pixel line-height value
/// @param $fontSize - the fontSize it's relative to. Defaults to base-font-size
///
/// @example scss - Set the lineheight
///   .foo {
///     font-size: px2rem(22);
///     line-height: px2localLineHeight(48, 16px);
///   }
@function px2localLineHeight($px, $fontSize: get-ui(base-font-size)) {
  @if (unitless($px)) {
    $px: $px * 1px;
  }
  @if (unitless($fontSize)) {
    $fontSize: $fontSize * 1px;
  }
  @return ($px / $fontSize);
}

/// Helper function to retrieve a z-index
///
/// @author ju@formundcode.de
///
/// @param $name - The z-index name
/// @param $list - (optional) the list of z-indexes, defaults to the main list
///
/// @example scss - Use function to set width of an element to 1rem
///   .foo {
///     z-index: zIndex(foo);
///   }
@function zIndex($name, $list: $default-z-indexes) {
  $index: index($list, $name);

  @if ($index == null) {
    @warn "Unknown z-index `#{$name}`.";
    @return 0;
  }

  @return $index * 10;
}
